"use strict";var T=Object.create;var h=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var v=Object.getOwnPropertyNames,d=Object.getOwnPropertySymbols,x=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty,z=Object.prototype.propertyIsEnumerable;var P=(o,e,r)=>e in o?h(o,e,{enumerable:!0,configurable:!0,writable:!0,value:r}):o[e]=r,n=(o,e)=>{for(var r in e||(e={}))u.call(e,r)&&P(o,r,e[r]);if(d)for(var r of d(e))z.call(e,r)&&P(o,r,e[r]);return o};var S=(o,e)=>{for(var r in e)h(o,r,{get:e[r],enumerable:!0})},j=(o,e,r,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let t of v(e))!u.call(o,t)&&t!==r&&h(o,t,{get:()=>e[t],enumerable:!(s=w(e,t))||s.enumerable});return o};var m=(o,e,r)=>(r=o!=null?T(x(o)):{},j(e||!o||!o.__esModule?h(r,"default",{value:o,enumerable:!0}):r,o)),b=o=>j(h({},"__esModule",{value:!0}),o);var W={};S(W,{Wappalyzer:()=>g,default:()=>O});module.exports=b(W);var p=m(require("fs")),c=m(require("path")),y=m(require("wappalyzer-core")),f=require("undici");var g=class{constructor(e={}){this.options=e;this.loaded=!1;this.path=c.default.resolve(c.default.join(__dirname,"json"));e.path&&(this.path=e.path),this.files={categories:c.default.resolve(c.default.join(this.path,"categories.json")),technologies:c.default.resolve(c.default.join(this.path,"technologies.json"))}}async prepare(e){var r,s;try{p.default.existsSync(this.path)||p.default.mkdirSync(this.path);let t={technologies:{},categories:{}};for(let[l,i]of Object.entries(this.files))if(p.default.existsSync(i)&&!e){let a=p.default.readFileSync(i,{flag:"r"});Object.assign(t,{[l]:JSON.parse(a.toString())})}else await this.fetch(l).then(a=>{Object.assign(t,{[l]:a})}).catch(Promise.reject);return y.default.setCategories(n(n({},t.categories),(r=this.options)==null?void 0:r.custom_categories)),y.default.setTechnologies(n(n({},t.technologies),(s=this.options)==null?void 0:s.custom_technologies)),this.loaded=!0,Promise.resolve(this)}catch(t){return Promise.reject(t)}}async resolve(e,r=!1){return await this.prepare(r),y.default.resolve(y.default.analyze(e))}async fetch(e){if(e=="categories"){let r=await(0,f.fetch)("https://raw.githubusercontent.com/censys/wappalyzer/master/src/categories.json");if(!r.ok||!r.body)return Promise.reject(new Error("Empty body"));let s=await r.json();return p.default.writeFileSync(this.files[e],JSON.stringify(s)),Promise.resolve(s)}else if(e=="technologies"){let s=Array.from({length:27},(i,a)=>a?String.fromCharCode(a+96):"_").reduce((i,a)=>(i.push((0,f.fetch)(`https://raw.githubusercontent.com/censys/wappalyzer/master/src/technologies/${a}.json`).then(C=>C.json())),i),new Array),l=(await Promise.all(s)).reduce((i,a)=>n(n({},i),a),{});return p.default.writeFileSync(this.files[e],JSON.stringify(l)),Promise.resolve(l)}return Promise.reject(new Error("Invalid name"))}},O=g;0&&(module.exports={Wappalyzer});
